apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: demo-app
  namespace: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-app
  template:
    metadata:
      labels:
        app: demo-app
    spec:
      containers:
      - name: demo-app
        image: harbor.lab.home/library/demo-app:latest
        ports:
        - containerPort: 8080
        env:
        - name: WAVEFRONT_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: wavefront
              key: wavefront_api_token
        - name: WAVEFRONT_URL
          valueFrom:
            secretKeyRef:
              name: wavefront
              key: wavefront_url
  # wait a minimum 30 seconds before sending traffic
  minReadySeconds: 30
  # Deployment strategy to use during updates
  strategy:
    canary:
      # CanaryService holds the name of a service which selects pods with canary version and don't select any pods with stable version. +optional
      canaryService: spring-petclinic-canary
      # StableService holds the name of a service which selects pods with stable version and don't select any pods with canary version. +optional
      stableService: spring-petclinic-stable
      # The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total pods at the start of update (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. By default, a fixed value of 1 is used. Example: when this is set to 30%, the old RC can be scaled down by 30% immediately when the rolling update starts. Once new pods are ready, old RC can be scaled down further, followed by scaling up the new RC, ensuring that at least 70% of original number of pods are available at all times during the update. +optional
      maxUnavailable: 0
      # The maximum number of pods that can be scheduled above the original number of pods. Value can be an absolute number (ex: 5) or a percentage of total pods at the start of the update (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. By default, a value of 1 is used. Example: when this is set to 30%, the new RC can be scaled up by 30% immediately when the rolling update starts. Once old pods have been killed, new RC can be scaled up further, ensuring that total number of pods running at any time during the update is atmost 130% of original pods. +optional
      maxSurge: 1
      
      
      steps:
      - setWeight: 20 
      - pause:
          duration: 20s 
      - setWeight: 40
      - pause:
          duration: 20s 
      - setWeight: 80
      - pause:
          duration: 20s 
      # Anti Affinity configuration between desired and previous replicaset. Only one must be specified
      antiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          weight: 50 # Between 1 - 100
      # Traffic routing specifies ingress controller or service mesh configuration to achieve
      # advanced traffic splitting. If omitted, will achieve traffic split via a weighted
      # replica counts between the canary and stable ReplicaSet.
      trafficRouting:
       
        # NGINX Ingress Controller routing configuration
        nginx:
          stableIngress: spring-petclinic  # required